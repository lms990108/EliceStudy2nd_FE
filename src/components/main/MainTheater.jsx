import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./MainTheater.scss";

function MainTheater() {
  const [selectedTheater, setSelectedTheater] = useState("Íµ≠Î¶ΩÍ∑πÏû•");
  const [shows, setShows] = useState([]); // ÏÑ†ÌÉùÎêú Í∑πÏû•Ïóê Îî∞Î•∏ Í≥µÏó∞ Î™©Î°ùÏùÑ Ï†ÄÏû•
  const navigate = useNavigate();

  // Ïó∞Í∑πÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ìï¥ÎãπÏó∞Í∑π ÏÉÅÏÑ∏ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
  const handleShowClick = (showId) => {
    navigate(`/play/${showId}`);
  };

  // Í∑πÏû• ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨
  const handleTheaterClick = (theater) => {
    setSelectedTheater(theater);
  };

  useEffect(() => {
    fetch(`https://dailytopia2.shop/api/shows?limit=1000`)
      .then((res) => res.json())
      .then((data) => {
        const today = new Date();

        const filteredAndSortedShows = data.shows
          .filter((show) => show.location.includes(selectedTheater)) // ÏÑ†ÌÉùÎêú Í∑πÏû•Ïóê Îî∞Îùº ÌïÑÌÑ∞ÎßÅ
          .map((show) => {
            const showDate = new Date(show.start_date);
            const diffTime = Math.abs(showDate - today); // Ïò§Îäò ÎÇ†ÏßúÏôÄÏùò Ï∞®Ïù¥(Î∞ÄÎ¶¨Ï¥à)
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); // Ïùº Îã®ÏúÑÎ°ú Î≥ÄÌôò
            return { ...show, diffDays };
          })
          .sort((a, b) => a.diffDays - b.diffDays) // ÎÇ†Ïßú Ï∞®Ïù¥Ïóê Îî∞Îùº Ï†ïÎ†¨
          .slice(0, 4); // ÏÉÅÏúÑ 4Í∞ú Í≥µÏó∞ ÏÑ†ÌÉù

        setShows(filteredAndSortedShows);
      })
      .catch((err) => console.error(err));
  }, [selectedTheater]);

  const theaterArray = [
    "Íµ≠Î¶ΩÍ∑πÏû•",
    "ÏïÑÎ•¥ÏΩîÏòàÏà†Í∑πÏû•",
    "ÎåÄÌïôÎ°úÏòàÏà†Í∑πÏû•",
    "Î™ÖÎèôÏòàÏà†Í∑πÏû•",
  ];

  const getTheaterInfo = (theaterName) => {
    switch (theaterName) {
      case "Íµ≠Î¶ΩÍ∑πÏû•":
        return {
          image: process.env.PUBLIC_URL + "/theater1.png",
          text1: "Ïö∞Î¶¨ ÏãúÎåÄÏùò ÏòàÏà†Í∞Ä,",
          text2: "Í∑∏Î¶¨Í≥† Í¥ÄÍ∞ùÍ≥º Ìï®Íªò",
          text3: "Ïó≠ÏÇ¨Î•º Ïç® ÎÇ¥Î†§Í∞ÄÎäî Í≥µÍ∞Ñ",
        };
      case "ÏïÑÎ•¥ÏΩîÏòàÏà†Í∑πÏû•":
        return {
          image: process.env.PUBLIC_URL + "/theater2.png",
          text1: "ÏòàÏà†Ïù∏Îì§Ïù¥",
          text2: "ÌïúÏûêÎ¶¨Ïóê Î™®Ïù¥Îäî",
          text3: "Í≥µÏó∞ÏòàÏà† Ï†ÑÎ¨∏ Í∑πÏû•",
        };
      case "ÎåÄÌïôÎ°úÏòàÏà†Í∑πÏû•":
        return {
          image: process.env.PUBLIC_URL + "/theater3.png",
          text1: "ÏòàÏà†Í∞ÄÏôÄ",
          text2: "Í¥ÄÍ∞ùÎì§ Î¨¥ÎëêÏóêÍ≤å",
          text3: "ÏµúÍ≥†Ïùò Í≥µÍ∞ÑÏù¥ ÎêòÎäî Í≥≥",
        };
      case "Î™ÖÎèôÏòàÏà†Í∑πÏû•":
        return {
          image: process.env.PUBLIC_URL + "/theater4.png",
          text1: "Ïò§ÎäòÏùò",
          text2: "Ïù¥ÏïºÍ∏∞Î•º Î∞úÍ≤¨ÌïòÍ≥†",
          text3: "Í∞êÎèôÏùÑ ÏÑ†ÏÇ¨ÌïòÎäî Í≥µÍ∞Ñ",
        };
    }
  };

  const theaterInfo = getTheaterInfo(selectedTheater);

  const formatTitle = (title) => {
    return title.length > 12 ? title.slice(0, 12) + "„Éª„Éª„Éª" : title;
  };

  return (
    <div className="main-theater-container">
      <div className="main-theater-header">
        <h1>Ìã∞ÎãàÎ∞ïÏä§ Ï∂îÏ≤ú Í∑πÏû• üèõÔ∏è</h1>
        <div className="theater-list-container">
          <ul className="theater-list-box">
            {theaterArray.map((theater) => (
              <li key={theater}>
                <div
                  className={`theater-list ${
                    selectedTheater === theater ? "selected" : ""
                  }`}
                  onClick={() => handleTheaterClick(theater)}
                >
                  {theater}
                </div>
              </li>
            ))}
          </ul>
        </div>
      </div>
      <div className="main-theater-body">
        <div className="theater-info">
          <img
            className="theater-img"
            src={theaterInfo.image}
            alt="theater-image"
          />
          <div>
            <p>{theaterInfo.text1}</p>
            <p>{theaterInfo.text2}</p>
            <p>{theaterInfo.text3}</p>
          </div>
          <span></span>
        </div>
        <div className="theater-play">
          {shows.map((show, index) => (
            <div key={index} className="theater-play-list">
              <div
                className="theater-play-img-box"
                onClick={() => handleShowClick(show.showId)}
              >
                <img src={show.poster} alt={show.title} />
              </div>
              <div onClick={() => handleShowClick(show.showId)}>
                <p className="theater-play-list-title">
                  {formatTitle(show.title)}
                </p>
                <p className="theater-play-list-info">
                  {show.location}
                  <br />
                  {`${new Date(
                    show.start_date
                  ).toLocaleDateString()} ~ ${new Date(
                    show.end_date
                  ).toLocaleDateString()}`}
                </p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default MainTheater;
